mydata$New_time <-
parse_date_time(x = mydata$time, c("%Y-%m-%d %H:%M:%S"))
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/10/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' loading and cleaning the GPS data
############################################################################
#' Load the required packages
library(tidyverse)
#' Section 1: Load the data ----
mydata <- read_csv("data/gpsdata_mecoco.csv" , col_names = TRUE)
#' take a look at what we've loaded
glimpse(mydata)
head(mydata)
tail(mydata)
summary(mydata)
str(mydata)
levels(as.factor(mydata$animals_id))
#' 1,892,424 observations of 15 variables
#' looks like there are some NAs in the data
#' let's drop them
mydata <- mydata %>% drop_na()
#' reduces the data set down to 1,788,743 observations
#' how many data points are in each of the studies?
mydata %>% group_by(study_areas_id) %>% summarise(duration = length(study_areas_id))
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' summarise the covariates
############################################################################
library(adehabitatLT)
library(lubridate)
library(amt)
library(sp)
#' can filter by study for testing
#'  mydata <- filter(mydata, study_areas_id == "1")
#' Check for duplicated observations
ind2 <-
mydata %>% select(acquisition_time, longitude, latitude, animals_id) %>%
duplicated
sum(ind2)
# remove them
mydata$dups <- ind2
mydata <- filter(mydata, dups == "FALSE")
mydata
rm(ind2)
#' rename some of the columns for data manipulation
#' order is new name old name
mydata <- rename(mydata, time = acquisition_time)
mydata <- rename(mydata, long = longitude)
mydata <- rename(mydata, lat = latitude)
mydata <- rename(mydata, id = animals_id)
mydata <- rename(mydata, study = study_areas_id)
mydata <- rename(mydata, ndvi = ndvi_modis_boku)
mydata <- rename(mydata, altitude = altitude_copernicus)
mydata <- rename(mydata, slope = slope_copernicus)
mydata <- rename(mydata, aspect = aspect_copernicus)
mydata <- rename(mydata, tree = treecover_copernicus)
#' all of the data is in the format of day-month-year
#' note that time is in UTC
mydata$New_time <-
parse_date_time(x = mydata$time, c("%Y-%m-%d %H:%M:%S"))
# keep only the new time data
mydata <- select(mydata, New_time, long, lat, id, study, ndvi, altitude, slope, aspect, tree, corine_2006, corine_2012)
mydata <- rename(mydata, time = New_time)
mydata
#' we want to work with monthly averages
#' some animals were tracked for over a year
#' so we must include a year-month-id grouping variable
#' first combine year and month
mydata$yr_month <- format(mydata$time, format = "%Y/%m")
mydata$yr_month  <- as.factor(mydata$yr_month)
#' we also need a year-month-day variable to see what the coverage is like over the course of
#' a month for each individual
mydata$yr_month_day <- format(mydata$time, format = "%Y/%m/%d")
mydata$yr_month_day <- as.factor(mydata$yr_month_day)
head(mydata)
#' count the number of unique days when grouped by id and and month
short_months <- mydata %>%
group_by(id, yr_month) %>%
summarise(count = n_distinct(yr_month_day)) %>% filter(count < 28) %>% droplevels()
short_months
short_months$yr_month
#' we merge the two and force all = TRUE so even the values that don't have a count
#' are included, this allows us to extract the tracks we won't that have ~ a month
#' of coverage
mydata2 <- merge(short_months, mydata, all = TRUE)
length(mydata$id)
length(mydata2$id)
#' keep only the rows with the NAs which are the counts > 28
mydata2<- mydata2 %>% filter_all(any_vars(is.na(.)))
head(mydata2)
max(mydata2$count, na.rm = T)
#' Corine data switches in 2012, so they're not the same value
#' mydata2$corine_2006 == mydata2$corine_2012
#' We can create a new column with year and provide Corine conditional on the year
mydata2$year <- format(mydata2$time, format = "%Y")
mydata2$year <- as.numeric(mydata2$year)
head(mydata2)
mydata2$corine <- if_else(mydata2$year >= 2012, mydata2$corine_2012, mydata2$corine_2006)
#' check that it worked
mydata2 %>% filter(id == 1453)
#' now create a unique identifier that has the ID, year and month
#' We will use these to summarise the covariates
mydata2$identifier <- paste(mydata2$id, mydata2$yr_month, sep = "_")
mydata2$identifier <- as.factor(mydata2$identifier)
head(mydata2)
#' Create the function for mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#' calculate summary statistics for each covariate
summary_data <- mydata2 %>% group_by(identifier) %>%
summarise_at(.vars = vars(ndvi, altitude, slope, aspect, tree, corine),
.funs = c(Mean="mean", Sd="sd", Median = "median", Mode = "getmode"))
#' remove the summary statistics for corine that don't make sense i.e. everything bar the mode
summary_data <- summary_data %>% select(-corine_Mean, -corine_Sd, -corine_Median)
summary_data
write.csv(summary_data, "results/env_data.csv", row.names = F)
#' export the results
write.csv(summary_data, "results/env_data.csv", row.names = F)
#' add an id column
summary_data <-
separate(
summary_data,
col = identifier,
into = c("id", "NA"),
sep = "_",
remove = "FALSE"
) %>%  select(-"NA")
#' export the results
write.csv(summary_data, "results/env_data.csv", row.names = F)
#' load in Enri's data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
head(env)
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
all_data <- merge(merge1,activity,c("identifier")) %>% select(-id.x, -id.y)
all_data <- merge(merge1,activity,c("identifier"))
head(all_data)
length(all_data$identifier)
#' export the results
write.csv(all_data, "results/combined_data.csv", row.names = F)
short_months
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
all_data <- merge(merge1,activity,c("identifier"))
head(all_data)
head(animal)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
head(animal)
library(lubridate)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
head(animal)
#' extract the year the tracking started
animal$year <- format(animal$gps_start_time, format = "%Y")
head(animal)
#' now calculate age
animal$age <- animal$year - animal$year_birth
#' extract the year the tracking started
animal$year <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
animal$age <- animal$year - animal$year_birth
head(animal)
head(animal$age)
head(all_data)
#' we need to append age, sex using aniamls_id
merge(animal, all_data, by = "animals_id")
head(all_data)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth, gps_start_time)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
#' extract the year the tracking started
animal$year <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
animal$age <- animal$year - animal$year_birth
#' we need to append age, sex using aniamls_id
merge(animal, all_data, by = "animals_id")
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth, gps_start_time)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
#' extract the year the tracking started
animal$year_diff <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
animal$age <- animal$year_diff - animal$year_birth
#' we need to append age, sex using aniamls_id
merge(animal, all_data, by = "animals_id")
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
library(lubridate)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' merge with activity data
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
merge2 <- merge(merge1,activity,c("identifier"))
head(merge2)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth, gps_start_time)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
#' extract the year the tracking started
animal$year_diff <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
animal$age <- animal$year_diff - animal$year_birth
#' we need to append age, sex using aniamls_id
all_data <- merge(animal, merge2, by = "animals_id")
#' drop unwanted columns
all_data <- all_data %>% select(-year_diff)
head(all_data)
?if
?if()
all_data$predator <- ifelse(all_data$study_areas_id == 25, 2, 999)
all_data$predator <- ifelse(all_data$study_areas_id == 1, 2, 999)
all_data$predator <- ifelse(all_data$study_areas_id == 8, 1, 999)
all_data$predator <- ifelse(all_data$study_areas_id == 2, 2, 999)
all_data$predator <- ifelse(all_data$study_areas_id == 15, 1, 999)
all_data$predator <- ifelse(all_data$study_areas_id == 16, 3, 999)
head(all_data)
tail(all_data)
class(all_data$study_areas_id)
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
library(lubridate)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' merge with activity data
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
merge2 <- merge(merge1,activity,c("identifier"))
head(merge2)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth, gps_start_time)
#' need to calculate age of deer using birth year and gps_start_time
#' all of the data is in the format of day-month-year
#' note that time is in UTC
animal$gps_start_time <-
parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
#' extract the year the tracking started
animal$year_diff <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
animal$age <- animal$year_diff - animal$year_birth
#' we need to append age, sex using aniamls_id
all_data <- merge(animal, merge2, by = "animals_id")
#' drop unwanted columns
all_data <- all_data %>% select(-year_diff)
head(all_data)
all_data$predator <- ifelse(all_data$study_areas_id == 25 | all_data$study_areas_id == 1 | all_data$study_areas_id == 2, 2, 1)
head(all_data)
tail(all_data)
all_data$predator <- ifelse(all_data$study_areas_id == 16, 3, all_data$predator)
head(all_data)
tail(all_data)
summary(all_data$predator)
filter(all_data, study_areas_id = =16)
filter(all_data, study_areas_id == 16)
#' check that study area 25 has 2 predators
filter(all_data, study_areas_id == 25)
#' check that study area 8 has 1 predator
filter(all_data, study_areas_id == 8)
head(merge2)
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
library(lubridate)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' merge with activity data
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
merge2 <- merge(merge1,activity,c("identifier"))
head(merge2)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth)
#' need to calculate age of deer using birth year
#' all of the data is in the format of day-month-year
#' note that time is in UTC
#' animal$gps_start_time <-
#'   parse_date_time(x = animal$gps_start_time, c("%Y-%m-%d %H:%M:%S"))
#' extract the year the tracking started
#' animal$year_diff <- as.numeric(format(animal$gps_start_time, format = "%Y"))
#' now calculate age
#' animal$age <- animal$year_diff - animal$year_birth
#' we need to append age, sex using aniamls_id
all_data <- merge(animal, merge2, by = "animals_id")
head(all_data)
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
library(lubridate)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' merge with activity data
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
merge2 <- merge(merge1,activity,c("identifier"))
head(merge2)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth)
#' we need to append individual descriptions using aniamls_id
all_data <- merge(animal, merge2, by = "animals_id")
head(all_data)
#' now calculate age
all_data$age <- all_data$year - all_data$year_birth
head(all_data)
#'##########################################################################
#' ame1 project - studying the relation between home range size and activity
#' 2019/11/04
#' Adam Kane, Enrico Pirotta & Barry McMahon
#' https://mecoco.github.io/ame1.html
#' merging data
############################################################################
library(tidyverse)
library(lubridate)
#' load in HR data
hr <- read_csv("results/home_range_month.csv" , col_names = TRUE)
#' load in environmental data
env <- read_csv("results/env_data.csv" , col_names = TRUE)
#' load in activity data
activity <- read_csv("results/Activity_data_byMonth.csv" , col_names = TRUE)
#' merge the first 2
merge1 <- merge(hr,env,c("identifier")) %>% select(-id.x, -id.y)
head(merge1)
#' merge with activity data
#' make an identifier so it matches the other output
#' add a leading zero
activity$month <- sprintf("%02d",activity$month) # fix to 2 characters
activity$yr_month <- paste(activity$year, activity$month, sep = "/")
activity$identifier <- paste(activity$animals_id, activity$yr_month, sep = "_")
activity <- activity %>% select(-yr_month)
head(activity)
merge2 <- merge(merge1,activity,c("identifier"))
head(merge2)
#' merge with individual descriptions
animal <- read_csv("data/animalsensordata_mecoco.csv" , col_names = TRUE)
head(animal)
#' select only relevant columns
animal <- animal %>% select(animals_id, sex, year_birth)
#' we need to append individual descriptions using aniamls_id
all_data <- merge(animal, merge2, by = "animals_id")
#' now calculate age
all_data$age <- all_data$year - all_data$year_birth
head(all_data)
#' add predator species counts
#' CH - Swiss Alps (Bernese, study areas id = 25) -> 2
#' IT - Italian Alps (Bondone, study areas id = 1) -> 2
#' FR - South France (Aurignac, study areas id = 8) -> 1
#' SE-DE - Southeast Germany (Bavarian Forest, study areas id = 2) -> 2
#' SW-DE - Southern Germany (Upper Rhine valley, study areas id = 15) -> 1
#' PL - Northeastern Poland (Bialowieza National Park, study areas id = 16) -> 3
all_data$predator <- ifelse(all_data$study_areas_id == 25 | all_data$study_areas_id == 1 | all_data$study_areas_id == 2, 2, 1)
all_data$predator <- ifelse(all_data$study_areas_id == 16, 3, all_data$predator)
head(all_data)
tail(all_data)
#' check that study area 16 has 3 predators
filter(all_data, study_areas_id == 16)
#' check that study area 25 has 2 predators
filter(all_data, study_areas_id == 25)
#' check that study area 8 has 1 predator
filter(all_data, study_areas_id == 8)
#' export the results
write.csv(all_data, "results/combined_data.csv", row.names = F)
